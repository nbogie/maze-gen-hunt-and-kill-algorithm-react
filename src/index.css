:root {
    font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
    line-height: 1.5;
    font-weight: 400;
    color-scheme: light dark;
    background-color: #242424;
}

.App {
    max-width: 1024px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.mazeView {
    /* a default but will be dynamically set by react */
    --numColumnsInGrid: 8;

    width: 40vw;
    height: 100%;
    aspect-ratio: 1;
    display: grid;
    grid-template-columns: repeat(var(--numColumnsInGrid), 1fr);
    grid-template-rows: repeat(var(--numColumnsInGrid), 1fr);
    place-content: center;
    font-size: 1.5rem;
}

.cell {
    position: relative;
    display: grid;
    place-items: center;
    background: skyblue;
    margin: 0.1rem;
    width: 100%;
    overflow: hidden;
    border-radius: 0.3rem;
}
.cellAnnotations {
    user-select: none;
    font-size: calc(0.5rem * 8 / var(--numColumnsInGrid));

    display: grid;
    width: 80%;
    height: 80%;
    padding: 0.2rem;
    grid-template-areas:
        "id . dist"
        ". . ."
        "pos pos .";
    color: black;
    opacity: 0.6;
    transition: opacity 0.4s ease-in-out;
    transition: scale 0.4s ease-in-out;
}
.cellId {
    grid-area: id;
}
.cellPos {
    grid-area: pos;
}
.cellDist {
    grid-area: dist;
}

.cell:hover .cellAnnotations {
    opacity: 0.9;
    scale: 1.1;
}

.wall {
    position: absolute;
    background: rgba(255, 255, 255, 1);
}

.wall.W,
.wall.E {
    top: 0;
    width: 10%;
    height: 100%;
}

.wall.N,
.wall.S {
    left: 0;
    width: 100%;
    height: 10%;
}

.wall.N {
    top: 0;
}

.wall.S {
    bottom: 0;
}

.wall.W {
    left: 0;
}

.wall.E {
    right: 0;
}

.controls {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin-bottom: 1rem;
}

button {
    font-size: 1.2rem;
    padding: 0.2rem 0.5rem;
    border-radius: 0.3rem;
}
